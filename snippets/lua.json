{"if":{"prefix":"if","body":["if ${1:true} then","\t$0","end"]},"local":{"prefix":"l","description":"declare a variable","body":["local ${0}"]},"class":{"prefix":"cl","description":"Create a class","body":["${1:M} = {}\n","$1.${2:new} = function($3)","\t${6}","end"]},"return":{"prefix":"rt","description":"return value","body":["return $0"]},"inline-function":{"prefix":"f=","body":["local ${1:name} = function($2)","\t${0}","end"]},"while":{"prefix":"while","body":["while ${1:true} do","\t$0","end"]},"pcall":{"prefix":"pca","description":"Protect call a function","body":["pcall(${1:function})"]},"require":{"prefix":"req","description":"Require module","body":["require(${1:module})"]},"self":{"prefix":"self:","body":["function self:${1:methodName}($2)","\t$0","end"]},"foreach":{"prefix":"foreach","body":["for i, ${1:x} in pairs(${2:table}) do","\t$0","end"]},"print":{"prefix":"p","body":["print(${0})"]},"forline":{"prefix":"forline","description":"read file line by line","body":["local f = io.open(${1:${2:filename}}, \"${3:r}\")\n","while true do","\tline = f:read()","\tif line == nil then break end\n","\t${0}","end"]},"elseif":{"prefix":"elseif","body":["elseif ${1:true} then","\t$0"]},"for":{"prefix":"for","description":"for loop range","body":["for ${1:i}=${2:1},${3:10} do","\t$0","end"]},"locreq":{"prefix":"lreq","description":"Require module as a variable","body":["local ${1:var} = require(${2:module})"]},"assigment":{"prefix":"ll","description":"define a variable","body":["local ${1:varName} = ${0:value}"]},"function":{"body":["function ${1:name}($2)","\t${0}","end"],"prefix":"fn"},"locpcall":{"prefix":"lpca","description":"Protect call a function as a variable","body":["local ${1:status}, ${2:err_or_value} = pcall(${3:function})"]}}